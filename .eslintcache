[{"/Users/apple/Desktop/Hola/hola-app/src/components/login/login.jsx":"1","/Users/apple/Desktop/Hola/hola-app/src/components/signup/signup.jsx":"2","/Users/apple/Desktop/Hola/hola-app/src/components/mainpage/Main.jsx":"3","/Users/apple/Desktop/Hola/hola-app/src/index.js":"4"},{"size":3947,"mtime":1606501648591,"results":"5","hashOfConfig":"6"},{"size":1768,"mtime":1606502449442,"results":"7","hashOfConfig":"6"},{"size":4746,"mtime":1606509669364,"results":"8","hashOfConfig":"6"},{"size":1463,"mtime":1606501454284,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tuwijy",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/apple/Desktop/Hola/hola-app/src/components/login/login.jsx",[],"/Users/apple/Desktop/Hola/hola-app/src/components/signup/signup.jsx",[],"/Users/apple/Desktop/Hola/hola-app/src/components/mainpage/Main.jsx",["19","20","21","22","23","24"],"import './Main.css';\nimport Anshul from './Anshul.png';\nimport React from 'react';\n// or\nimport {Badge} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport SendIcon from '@material-ui/icons/Send';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction ResponsiveDrawer(props) {\n  const {window} = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      {/* <h1>Hola</h1> */}\n      <div className={classes.toolbar} />\n      <div style={{paddingLeft: ''}}>\n        <img\n          style={{width: '70%', paddingLeft: '5.8rem'}}\n          src={Anshul}\n          alt=\"sdj\"\n        />\n        <h1\n          style={{fontSize: '16px', textAlign: 'center', paddingBottom: '4rem'}}\n        >\n          Anshul Sharma\n        </h1>\n      </div>\n      <div className=\"sidebar\">\n        <a\n          style={{width: '100%', borderRadius: '0'}}\n          alt=\"sdf\"\n          class=\"ui label\"\n        >\n          <img src={Anshul} class=\"ui avatar right spaced image\" />\n          Elliot\n        </a>{' '}\n        <br />\n        <a\n          style={{width: '100%', borderRadius: '0'}}\n          alt=\"sdf\"\n          class=\"ui label\"\n        >\n          <img src={Anshul} class=\"ui avatar right spaced image\" />\n          Elliot\n        </a>\n        <br />\n        <a\n          style={{width: '100%', borderRadius: '0'}}\n          alt=\"sdf\"\n          class=\"ui label\"\n        >\n          <img src={Anshul} class=\"ui avatar right spaced image\" />\n          Elliot\n        </a>\n      </div>\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <div style={{display: 'flex'}}>\n            <h1 className=\"header_text\">HOLA</h1>\n\n            <Badge badgeContent={4} color=\"primary\">\n              <SendIcon />\n            </Badge>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n      </main>\n    </div>\n  );\n}\n\nResponsiveDrawer.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default ResponsiveDrawer;\n","/Users/apple/Desktop/Hola/hola-app/src/index.js",[],{"ruleId":"25","severity":1,"message":"26","line":80,"column":9,"nodeType":"27","endLine":84,"endColumn":10},{"ruleId":"28","severity":1,"message":"29","line":85,"column":11,"nodeType":"27","endLine":85,"endColumn":68},{"ruleId":"25","severity":1,"message":"26","line":89,"column":9,"nodeType":"27","endLine":93,"endColumn":10},{"ruleId":"28","severity":1,"message":"29","line":94,"column":11,"nodeType":"27","endLine":94,"endColumn":68},{"ruleId":"25","severity":1,"message":"26","line":98,"column":9,"nodeType":"27","endLine":102,"endColumn":10},{"ruleId":"28","severity":1,"message":"29","line":103,"column":11,"nodeType":"27","endLine":103,"endColumn":68},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]